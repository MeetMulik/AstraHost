import React from "react";
import { ScrollArea } from "@/components/ui/scroll-area";

type Props = {
  params: {
    projectId: string;
    deploymentId: string;
  };
};

const BuildLogs = () => {
  const logs = [
    { time: "01:16:34.790", message: "Running build in Washington, D.C., USA (East) - iad1" },
    { time: "01:16:35.273", message: "Cloning github.com/MeetWulik/image-gallery (Branch: main, Commit: b149a89)" },
    { time: "01:16:35.996", message: "Cloning completed: 720.208ms" },
    { time: "01:16:42.489", message: "Restored build cache" },
    { time: "01:16:42.633", message: 'Running "vercel build"' },
    { time: "01:16:44.099", message: "Vercel CLI 34.1.7" },
    { time: "01:16:44.984", message: "Detected 'pnpm-lock.yaml' version 6 generated by pnpm 8" },
    { time: "01:16:45.020", message: "Installing dependencies..." },
    { time: "01:16:46.851", message: "Lockfile is up to date, resolution step is skipped" },
    { time: "01:16:47.169", message: "Already up to date" },
    { time: "01:16:48.308", message: "Done in 3.2s" },
    { time: "01:16:48.336", message: "Detected Next.js version: 14.2.1" },
    { time: "01:16:48.357", message: 'Running "pnpm run build"' },
    { time: "01:16:49.486", message: "> image-gallery@0.1.0 build /vercel/path0" },
    { time: "01:16:49.486", message: "> next build" },
    { time: "01:16:51.225", message: "▲ Next.js 14.2.1" },
    { time: "01:16:51.386", message: "Creating an optimized production build ..." },
    { time: "01:17:00.883", message: "✓ Compiled successfully" },
    { time: "01:17:00.884", message: "Skipping validation of types" },
    { time: "01:17:00.884", message: "Skipping linting" },
    { time: "01:17:01.245", message: "Collecting page data ..." },
    { time: "01:17:02.777", message: "Generating static pages (0/5) ..." },
    { time: "01:17:03.079", message: "Generating static pages (1/5)" },
    { time: "01:17:03.087", message: "Generating static pages (2/5)" },
  ];

  return (
    <ScrollArea className="h-[400px] w-full rounded-md border p-4">
      <div className="space-y-2">
        <div className="flex justify-between items-center mb-4">
          <h2 className="text-lg font-semibold">Build Logs</h2>
          <div className="flex space-x-2">
            <span className="px-2 py-1 bg-foreground rounded-full text-xs text-background">All Logs (56)</span>
            <span className="px-2 py-1 bg-foreground rounded-full text-xs text-background">Errors (0)</span>
            <span className="px-2 py-1 bg-foreground rounded-full text-xs text-background">Warnings (0)</span>
          </div>
        </div>
        {logs.map((log, index) => (
          <div key={index} className="flex">
            <span className="text-foreground mr-4">{log.time}</span>
            <span>{log.message}</span>
          </div>
        ))}
      </div>
    </ScrollArea>
  );
};

const Page = (props: Props) => {
  console.log("deploymentId", props.params.deploymentId);
  return (
    <main className="flex flex-1 flex-col gap-4 p-4 lg:gap-6 lg:p-6">
      <BuildLogs />
    </main>
  );
};

export default Page;
